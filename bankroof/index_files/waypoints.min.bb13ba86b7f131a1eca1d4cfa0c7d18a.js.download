/*!
Waypoints - 4.0.0
Copyright Â© 2011-2015 Caleb Troughton
Licensed under the MIT license.
https://github.com/imakewebthings/waypoints/blog/master/licenses.txt
*/
(function(){var b=0;
var c={};
function a(d){if(!d){throw new Error("No options passed to Waypoint constructor")
}if(!d.element){throw new Error("No element option passed to Waypoint constructor")
}if(!d.handler){throw new Error("No handler option passed to Waypoint constructor")
}this.key="waypoint-"+b;
this.options=a.Adapter.extend({},a.defaults,d);
this.element=this.options.element;
this.adapter=new a.Adapter(this.element);
this.callback=d.handler;
this.axis=this.options.horizontal?"horizontal":"vertical";
this.enabled=this.options.enabled;
this.triggerPoint=null;
this.group=a.Group.findOrCreate({name:this.options.group,axis:this.axis});
this.context=a.Context.findOrCreateByElement(this.options.context);
if(a.offsetAliases[this.options.offset]){this.options.offset=a.offsetAliases[this.options.offset]
}this.group.add(this);
this.context.add(this);
c[this.key]=this;
b+=1
}a.prototype.queueTrigger=function(d){this.group.queueTrigger(this,d)
};
a.prototype.trigger=function(d){if(!this.enabled){return
}if(this.callback){this.callback.apply(this,d)
}};
a.prototype.destroy=function(){this.context.remove(this);
this.group.remove(this);
delete c[this.key]
};
a.prototype.disable=function(){this.enabled=false;
return this
};
a.prototype.enable=function(){this.context.refresh();
this.enabled=true;
return this
};
a.prototype.next=function(){return this.group.next(this)
};
a.prototype.previous=function(){return this.group.previous(this)
};
a.invokeAll=function(h){var g=[];
for(var e in c){g.push(c[e])
}for(var f=0,d=g.length;
f<d;
f++){g[f][h]()
}};
a.destroyAll=function(){a.invokeAll("destroy")
};
a.disableAll=function(){a.invokeAll("disable")
};
a.enableAll=function(){a.invokeAll("enable")
};
a.refreshAll=function(){a.Context.refreshAll()
};
a.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight
};
a.viewportWidth=function(){return document.documentElement.clientWidth
};
a.adapters=[];
a.defaults={context:window,continuous:true,enabled:true,group:"default",horizontal:false,offset:0};
a.offsetAliases={"bottom-in-view":function(){return this.context.innerHeight()-this.adapter.outerHeight()
},"right-in-view":function(){return this.context.innerWidth()-this.adapter.outerWidth()
}};
window.Waypoint=a
}());
(function(){function d(g){window.setTimeout(g,1000/60)
}var c=0;
var f={};
var b=window.Waypoint;
var e=window.onload;
function a(g){this.element=g;
this.Adapter=b.Adapter;
this.adapter=new this.Adapter(g);
this.key="waypoint-context-"+c;
this.didScroll=false;
this.didResize=false;
this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()};
this.waypoints={vertical:{},horizontal:{}};
g.waypointContextKey=this.key;
f[g.waypointContextKey]=this;
c+=1;
this.createThrottledScrollHandler();
this.createThrottledResizeHandler()
}a.prototype.add=function(g){var h=g.options.horizontal?"horizontal":"vertical";
this.waypoints[h][g.key]=g;
this.refresh()
};
a.prototype.checkEmpty=function(){var g=this.Adapter.isEmptyObject(this.waypoints.horizontal);
var h=this.Adapter.isEmptyObject(this.waypoints.vertical);
if(g&&h){this.adapter.off(".waypoints");
delete f[this.key]
}};
a.prototype.createThrottledResizeHandler=function(){var g=this;
function h(){g.handleResize();
g.didResize=false
}this.adapter.on("resize.waypoints",function(){if(!g.didResize){g.didResize=true;
b.requestAnimationFrame(h)
}})
};
a.prototype.createThrottledScrollHandler=function(){var g=this;
function h(){g.handleScroll();
g.didScroll=false
}this.adapter.on("scroll.waypoints",function(){if(!g.didScroll||b.isTouch){g.didScroll=true;
b.requestAnimationFrame(h)
}})
};
a.prototype.handleResize=function(){b.Context.refreshAll()
};
a.prototype.handleScroll=function(){var n={};
var m={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};
for(var h in m){var j=m[h];
var r=j.newScroll>j.oldScroll;
var p=r?j.forward:j.backward;
for(var l in this.waypoints[h]){var k=this.waypoints[h][l];
var o=j.oldScroll<k.triggerPoint;
var i=j.newScroll>=k.triggerPoint;
var g=o&&i;
var q=!o&&!i;
if(g||q){k.queueTrigger(p);
n[k.group.id]=k.group
}}}for(var s in n){n[s].flushTriggers()
}this.oldScroll={x:m.horizontal.newScroll,y:m.vertical.newScroll}
};
a.prototype.innerHeight=function(){if(this.element==this.element.window){return b.viewportHeight()
}return this.adapter.innerHeight()
};
a.prototype.remove=function(g){delete this.waypoints[g.axis][g.key];
this.checkEmpty()
};
a.prototype.innerWidth=function(){if(this.element==this.element.window){return b.viewportWidth()
}return this.adapter.innerWidth()
};
a.prototype.destroy=function(){var l=[];
for(var k in this.waypoints){for(var h in this.waypoints[k]){l.push(this.waypoints[k][h])
}}for(var j=0,g=l.length;
j<g;
j++){l[j].destroy()
}};
a.prototype.refresh=function(){var i=this.element==this.element.window;
var p=i?undefined:this.adapter.offset();
var s={};
var r;
this.handleScroll();
r={horizontal:{contextOffset:i?0:p.left,contextScroll:i?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:i?0:p.top,contextScroll:i?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}};
for(var h in r){var j=r[h];
for(var m in this.waypoints[h]){var k=this.waypoints[h][m];
var v=k.options.offset;
var w=k.triggerPoint;
var g=0;
var u=w==null;
var t,q,o;
var l,n;
if(k.element!==k.element.window){g=k.adapter.offset()[j.offsetProp]
}if(typeof v==="function"){v=v.apply(k)
}else{if(typeof v==="string"){v=parseFloat(v);
if(k.options.offset.indexOf("%")>-1){v=Math.ceil(j.contextDimension*v/100)
}}}t=j.contextScroll-j.contextOffset;
k.triggerPoint=g+t-v;
q=w<j.oldScroll;
o=k.triggerPoint>=j.oldScroll;
l=q&&o;
n=!q&&!o;
if(!u&&l){k.queueTrigger(j.backward);
s[k.group.id]=k.group
}else{if(!u&&n){k.queueTrigger(j.forward);
s[k.group.id]=k.group
}else{if(u&&j.oldScroll>=k.triggerPoint){k.queueTrigger(j.forward);
s[k.group.id]=k.group
}}}}}b.requestAnimationFrame(function(){for(var x in s){s[x].flushTriggers()
}});
return this
};
a.findOrCreateByElement=function(g){return a.findByElement(g)||new a(g)
};
a.refreshAll=function(){for(var g in f){f[g].refresh()
}};
a.findByElement=function(g){return f[g.waypointContextKey]
};
window.onload=function(){if(e){e()
}a.refreshAll()
};
b.requestAnimationFrame=function(h){var g=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||d;
g.call(window,h)
};
b.Context=a
}());
(function(){function e(g,f){return g.triggerPoint-f.triggerPoint
}function d(g,f){return f.triggerPoint-g.triggerPoint
}var a={vertical:{},horizontal:{}};
var b=window.Waypoint;
function c(f){this.name=f.name;
this.axis=f.axis;
this.id=this.name+"-"+this.axis;
this.waypoints=[];
this.clearTriggerQueues();
a[this.axis][this.name]=this
}c.prototype.add=function(f){this.waypoints.push(f)
};
c.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}
};
c.prototype.flushTriggers=function(){for(var k in this.triggerQueues){var l=this.triggerQueues[k];
var h=k==="up"||k==="left";
l.sort(h?d:e);
for(var j=0,g=l.length;
j<g;
j+=1){var f=l[j];
if(f.options.continuous||j===l.length-1){f.trigger([k])
}}}this.clearTriggerQueues()
};
c.prototype.next=function(f){this.waypoints.sort(e);
var g=b.Adapter.inArray(f,this.waypoints);
var h=g===this.waypoints.length-1;
return h?null:this.waypoints[g+1]
};
c.prototype.previous=function(f){this.waypoints.sort(e);
var g=b.Adapter.inArray(f,this.waypoints);
return g?this.waypoints[g-1]:null
};
c.prototype.queueTrigger=function(f,g){this.triggerQueues[g].push(f)
};
c.prototype.remove=function(f){var g=b.Adapter.inArray(f,this.waypoints);
if(g>-1){this.waypoints.splice(g,1)
}};
c.prototype.first=function(){return this.waypoints[0]
};
c.prototype.last=function(){return this.waypoints[this.waypoints.length-1]
};
c.findOrCreate=function(f){return a[f.axis][f.name]||new c(f)
};
b.Group=c
}());
(function(){var b=window.Waypoint;
function c(e){return e===e.window
}function d(e){if(c(e)){return e
}return e.defaultView
}function a(e){this.element=e;
this.handlers={}
}a.prototype.innerHeight=function(){var e=c(this.element);
return e?this.element.innerHeight:this.element.clientHeight
};
a.prototype.innerWidth=function(){var e=c(this.element);
return e?this.element.innerWidth:this.element.clientWidth
};
a.prototype.off=function(e,m){function i(p,r,q){for(var o=0,n=r.length-1;
o<n;
o++){var s=r[o];
if(!q||q===s){p.removeEventListener(s)
}}}var l=e.split(".");
var f=l[0];
var g=l[1];
var h=this.element;
if(g&&this.handlers[g]&&f){i(h,this.handlers[g][f],m);
this.handlers[g][f]=[]
}else{if(f){for(var k in this.handlers){i(h,this.handlers[k][f]||[],m);
this.handlers[k][f]=[]
}}else{if(g&&this.handlers[g]){for(var j in this.handlers[g]){i(h,this.handlers[g][j],m)
}this.handlers[g]={}
}}}};
a.prototype.offset=function(){if(!this.element.ownerDocument){return null
}var f=this.element.ownerDocument.documentElement;
var g=d(this.element.ownerDocument);
var e={top:0,left:0};
if(this.element.getBoundingClientRect){e=this.element.getBoundingClientRect()
}return{top:e.top+g.pageYOffset-f.clientTop,left:e.left+g.pageXOffset-f.clientLeft}
};
a.prototype.on=function(i,h){var k=i.split(".");
var f=k[0];
var g=k[1]||"__default";
var e=this.handlers[g]=this.handlers[g]||{};
var j=e[f]=e[f]||[];
j.push(h);
this.element.addEventListener(f,h)
};
a.prototype.outerHeight=function(g){var e=this.innerHeight();
var f;
if(g&&!c(this.element)){f=window.getComputedStyle(this.element);
e+=parseInt(f.marginTop,10);
e+=parseInt(f.marginBottom,10)
}return e
};
a.prototype.outerWidth=function(f){var g=this.innerWidth();
var e;
if(f&&!c(this.element)){e=window.getComputedStyle(this.element);
g+=parseInt(e.marginLeft,10);
g+=parseInt(e.marginRight,10)
}return g
};
a.prototype.scrollLeft=function(){var e=d(this.element);
return e?e.pageXOffset:this.element.scrollLeft
};
a.prototype.scrollTop=function(){var e=d(this.element);
return e?e.pageYOffset:this.element.scrollTop
};
a.extend=function(){var f=Array.prototype.slice.call(arguments);
function h(k,j){if(typeof k==="object"&&typeof j==="object"){for(var i in j){if(j.hasOwnProperty(i)){k[i]=j[i]
}}}return k
}for(var g=1,e=f.length;
g<e;
g++){h(f[0],f[g])
}return f[0]
};
a.inArray=function(f,g,e){return g==null?-1:g.indexOf(f,e)
};
a.isEmptyObject=function(f){for(var e in f){return false
}return true
};
b.adapters.push({name:"noframework",Adapter:a});
b.Adapter=a
}());